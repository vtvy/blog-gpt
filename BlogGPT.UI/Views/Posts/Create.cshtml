@using BlogGPT.UI.ViewModels.Post;
@model CreatePostModel

@{
    ViewData["Title"] = "Create";
    var selectList = ViewData["categories"] as MultiSelectList;
}

<h1>Create a new post</h1>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group mt-4">
                <label asp-for="CategoryIds" class="control-label"></label>
                <select class="w-100" asp-for="CategoryIds" multiple="multiple" asp-items="selectList"></select>
                <span asp-validation-for="CategoryIds" class="text-danger"></span>
            </div> 

            <div class="form-group mt-4">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group mt-4">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group mt-4">
                <label asp-for="Content" class="control-label"></label>
                <textarea asp-for="Content" class="form-control"></textarea>
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>

            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsPublished" /> @Html.DisplayNameFor(model => model.IsPublished)
                </label>
            </div>
            <div class="form-group mt-4">
                <input type="submit" value="Create" class="btn btn-primary me-2" />
                <a class="btn btn-warning" asp-action="Index">List of posts</a>
            </div>
        </form>
    </div>
</div>

<div>
</div>

@section Scripts {

    <script src="~/lib/select2/js/select2.min.js"></script>
    <link rel="stylesheet" href="~/lib/select2/css/select2.min.css" />
    <script src="~/lib/tinymce/tinymce.min.js" referrerpolicy="origin"></script>

    <script>
        $("#CategoryIds").select2({
            placeholder: "Select categories",
            allowClear: true,
            closeOnSelect: false
        });
        tinymce.init({
            selector: '#Content',
            plugins: 
                "lists advlist autolink link image charmap preview anchor pagebreak searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking save table directionality emoticons"
            ,
            toolbar1: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image",
            toolbar2: "preview media | forecolor backcolor emoticons | ltr rtl",
            image_advtab: true,
            file_picker_types: 'image',
            image_caption: true,
            file_picker_callback: (callback, value, meta) => {
                const input = document.createElement('input');
                input.setAttribute('type', 'file');
                input.setAttribute('accept', 'image/*');

                input.addEventListener('change', async (e) => {
                    const file = e.target.files[0];
                    const formData = new FormData();
                    formData.append("file",file);
                    try {
                        const response = await fetch("Upload", {
                            method: 'POST',
                            body: formData
                        }).then(r => r.json())
                          .then(res => {
                            return res;
                          }).catch(err => err);
                        let imgPath = response.imgPath;
                        let caption = response.results.captions[0].text;
                        callback(imgPath, { alt: caption });
                    } catch (error) {
                        console.error('Error:', error);
                    }
                });
                input.click();
            },
            content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:16px }'
        });
    </script>

    <partial name="_ValidationScriptsPartial" />
}
